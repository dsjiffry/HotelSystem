/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Shehan
 */
public class Form_Guests extends javax.swing.JFrame {

    /**
     * Creates new form Form_Guests
     */
    private Connection connection = null;
    private Statement statement = null;
    private ResultSet resultSet = null;
    private final String url = "jdbc:mysql://localhost:3306/hotelsystem";
    private final String user = "root";
    private final String password = "";
    private final String driver = "com.mysql.jdbc.Driver";
    
    public Form_Guests() {
        initComponents();
        jTable1.setAutoCreateRowSorter(true);
        
        try
        {
            Class.forName(driver);
            connection = DriverManager.getConnection(url,user,password);
            statement=connection.createStatement();
            
            
        } catch (Exception ex)
        {
            Logger.getLogger(Form_CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        roomNumber = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        GuestName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ADate = new org.jdesktop.swingx.JXDatePicker();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(50, 50, 86));

        jButton1.setBackground(new java.awt.Color(100, 255, 218));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("‚Üê");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Guest Details");

        jTable1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String []
            {
                "Name", "Room Number", "Email", "NIC/Passport", "Number", "End Date"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        roomNumber.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                roomNumberActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Room Number:");

        GuestName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                GuestNameActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Guest Name:");

        ADate.setBackground(new java.awt.Color(255, 255, 255));
        ADate.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ADate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ADateActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Date:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(roomNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(GuestName, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(ADate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomNumber)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GuestName))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ADate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        Form_Reservation1 R = new Form_Reservation1();
        R.setVisible(true);
        R.setTab(1);
        R.setLocationRelativeTo(this);
        R.setExtendedState(this.getExtendedState());
        this.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void roomNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNumberActionPerformed

        GuestName.setText("");
        ADate.setDate(null);
        String NumberPattern = "[0-9]+";
        
        if(!roomNumber.getText().matches(NumberPattern))
        {
            Form_Alerts A = new Form_Alerts("Please Check the Number");
            A.setDefaultCloseOperation(0);
            A.setVisible(true);
            A.setLocationRelativeTo(this);
            return;
        }
        int rNum = Integer.valueOf(roomNumber.getText());
        
        int rows = 0;
        try
           {



            String sql ="SELECT COUNT(number) FROM guest";
            resultSet = statement.executeQuery(sql);
            while(resultSet.next())
            {
                rows=resultSet.getInt("COUNT(number)");
            }
        }
        catch (Exception e) 
            {
            e.printStackTrace();
            }
        
        
        String contents[][] = new String[rows][6];
        
        try{


            String sql ="SELECT guest.name,room.number AS 'roomNumber',guest.email,guest.type,guest.number,bookings.endDate "
                    + "FROM guest,room,bookings "
                    + "WHERE room.GuestID=guest.id "
                    + "AND bookings.guestID = guest.id "
                    + "AND room.number = "+rNum+" ";
            
            
            resultSet = statement.executeQuery(sql);
            int i=0;
            while(resultSet.next())
            {
                contents[i][0]=resultSet.getString("name");
                contents[i][1]=String.valueOf(resultSet.getInt("roomNumber"));
                contents[i][2]=resultSet.getString("email");
                contents[i][3]=resultSet.getString("type");
                contents[i][4]=resultSet.getString("number");
                contents[i][5]=resultSet.getString("endDate");
                i = i + 1;
            }
           }
        catch (Exception e) {
        e.printStackTrace();
        }
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
    contents,
    new String [] {
        "Name", "Room Number", "Email", "NIC/Passport", "Number", "End Date"
    }
) {
    boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false
    };

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
});

     
    }//GEN-LAST:event_roomNumberActionPerformed

    private void GuestNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuestNameActionPerformed

        roomNumber.setText("");
        ADate.setDate(null);
        
        String NamePattern = "[A-Za-z]+";
        
        if(!GuestName.getText().matches(NamePattern))
        {
            Form_Alerts A = new Form_Alerts("Please Check the Name");
            A.setDefaultCloseOperation(0);
            A.setVisible(true);
            A.setLocationRelativeTo(this);
            return;
        }
        
        String gName = GuestName.getText();
        

        
        
        
        int rows = 0;
        try
           {



            String sql ="SELECT COUNT(number) FROM guest";
            resultSet = statement.executeQuery(sql);
            while(resultSet.next())
            {
                rows=resultSet.getInt("COUNT(number)");
            }
        }
        catch (Exception e) 
            {
            e.printStackTrace();
            }
        
        
        String contents[][] = new String[rows][6];
        
        try{


            String sql ="SELECT guest.name,room.number AS 'roomNumber',guest.email,guest.type,guest.number,bookings.endDate "
                    + "FROM guest,room,bookings "
                    + "WHERE room.GuestID=guest.id "
                    + "AND bookings.guestID = guest.id "
                    + "AND guest.name LIKE '%"+gName+"%'";
            resultSet = statement.executeQuery(sql);
            int i=0;
            while(resultSet.next())
            {
                contents[i][0]=resultSet.getString("name");
                contents[i][1]=String.valueOf(resultSet.getInt("roomNumber"));
                contents[i][2]=resultSet.getString("email");
                contents[i][3]=resultSet.getString("type");
                contents[i][4]=resultSet.getString("number");
                contents[i][5]=resultSet.getString("endDate");
                i = i + 1;
            }
           }
        catch (Exception e) {
        e.printStackTrace();
        }
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
    contents,
    new String [] {
        "Name", "Room Number", "Email", "NIC/Passport", "Number", "End Date"
    }
) {
    boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false
    };

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
});

    }//GEN-LAST:event_GuestNameActionPerformed

    private void ADateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADateActionPerformed

        roomNumber.setText("");
        GuestName.setText("");
        
        
        Date d =  ADate.getDate();
        java.sql.Date date = new java.sql.Date(d.getTime());
        int rows = 0;
        try
           {



            String sql ="SELECT COUNT(number) FROM guest";
            resultSet = statement.executeQuery(sql);
            while(resultSet.next())
            {
                rows=resultSet.getInt("COUNT(number)");
            }
        }
        catch (Exception e) 
            {
            e.printStackTrace();
            }
        
        
        String contents[][] = new String[rows][6];
        
        try{


            String sql ="SELECT guest.name,room.number AS 'roomNumber',guest.email,guest.type,guest.number,bookings.endDate "
                    + "FROM guest,room,bookings "
                    + "WHERE room.GuestID=guest.id "
                    + "AND bookings.guestID = guest.id "
                     + "AND '"+date+"' BETWEEN bookings.startDate AND bookings.endDate";
            resultSet = statement.executeQuery(sql);
            int i=0;
            while(resultSet.next())
            {
                contents[i][0]=resultSet.getString("name");
                contents[i][1]=String.valueOf(resultSet.getInt("roomNumber"));
                contents[i][2]=resultSet.getString("email");
                contents[i][3]=resultSet.getString("type");
                contents[i][4]=resultSet.getString("number");
                contents[i][5]=resultSet.getString("endDate");
                i = i + 1;
            }
           }
        catch (Exception e) {
        e.printStackTrace();
        }
        
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
    contents,
    new String [] {
        "Name", "Room Number", "Email", "NIC/Passport", "Number", "End Date"
    }
) {
    boolean[] canEdit = new boolean [] {
        false, false, false, false, false, false
    };

    public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
    }
});
        
        
    }//GEN-LAST:event_ADateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Guests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Guests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Guests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Guests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_Guests().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker ADate;
    private javax.swing.JTextField GuestName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField roomNumber;
    // End of variables declaration//GEN-END:variables
}
