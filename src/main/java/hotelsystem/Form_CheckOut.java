/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotelsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Shehan
 */
public class Form_CheckOut extends javax.swing.JFrame
{

    /**
     * Creates new form Form_CheckOut
     */
    private Connection connection = null;
    private Statement statement = null;
    private ResultSet resultSet = null;
    private final String url = HotelSystem.getProperties("db.url");
    private final String user = HotelSystem.getProperties("db.user");
    private final String password = HotelSystem.getProperties("db.password");
    private final String driver = HotelSystem.getProperties("db.driver");
    private String rooms;
    private double amount;
    private int GID;
    private volatile int i = 0;
    
    
    public Form_CheckOut()
    {
        initComponents();
    }
    public Form_CheckOut(String rooms,double amount,int GID)
    {
        initComponents();
        try
        {
            Class.forName(driver);
            connection = DriverManager.getConnection(url,user,password);
            statement=connection.createStatement();
            
            
        } catch (Exception ex)
        {
            Logger.getLogger(Form_CheckOut.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        this.rooms = rooms;
        this.GID = GID;
        this.amount = amount;
        jLabel9.setText("Waiting for Housekeeping to inspect the room(s): "+rooms);
        Extra.setVisible(false);
        Pay.setVisible(false);
        Total.setVisible(false);
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        
        checkReply T = new checkReply();
        T.start();
    }
    
    
    
    class checkReply extends Thread
    {
        
        @Override
        public void run()
        { 
            try
            {
                while(i==0)
                {
                    String sql ="SELECT Received FROM messages Where Message LIKE '%"+rooms+"%' AND Reply IS NOT null";
                    resultSet = statement.executeQuery(sql);
                    while(resultSet.next())
                    {
                        i = resultSet.getInt("Received");
                        System.out.println(i);
                    }

                    Thread.sleep(1000);     //1 second
                }

                if(i!=0)
                {
                    jLabel9.setText("Room has been Checked");
                    Extra.setVisible(true);
                    Pay.setVisible(true);
                    Total.setVisible(true);
                    jLabel11.setVisible(true);
                    jLabel12.setVisible(true);

                    String sql ="SELECT Reply FROM messages Where Message LIKE '%"+rooms+"%'";
                    resultSet = statement.executeQuery(sql);
                    while(resultSet.next())
                    {
                        Extra.setText(resultSet.getString("Reply"));
                        double total = Double.parseDouble(resultSet.getString("Reply")) + amount;
                        Total.setText(String.valueOf(total));
                    }


                }


            }
            catch (Exception e) {
            e.printStackTrace();
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Extra = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Total = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Pay = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(50, 50, 86));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Check Out");

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Waiting for Housekeeping to inspect the room(s):");

        Extra.setEditable(false);
        Extra.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        Extra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Extra.setEnabled(false);
        Extra.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ExtraActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Extra Charges: ");

        Total.setEditable(false);
        Total.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        Total.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Total.setEnabled(false);
        Total.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                TotalActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Total Amount Due:");

        Pay.setBackground(new java.awt.Color(100, 255, 218));
        Pay.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        Pay.setText("Take Payment");
        Pay.setToolTipText("");
        Pay.setBorder(null);
        Pay.setBorderPainted(false);
        Pay.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 135, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Extra, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(161, 161, 161))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(Pay, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Extra))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Total))
                .addGap(57, 57, 57)
                .addComponent(Pay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExtraActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ExtraActionPerformed
    {//GEN-HEADEREND:event_ExtraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExtraActionPerformed

    private void TotalActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_TotalActionPerformed
    {//GEN-HEADEREND:event_TotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalActionPerformed

    private void PayActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PayActionPerformed
    {//GEN-HEADEREND:event_PayActionPerformed
        
        double tot = Double.parseDouble(Total.getText());
        amount = tot;
        
        int PID = 0;
        int BID = 0;
        String type = null;
        int discount = 0;
        try {
                            String sql2 ="SELECT id,paymentID,type FROM bookings WHERE guestID="+GID;
                            resultSet = statement.executeQuery(sql2);
                            while(resultSet.next())
                            {
                                BID = resultSet.getInt("id");
                                PID = resultSet.getInt("paymentID");
                                type = resultSet.getString("type");
                            }
                            
                            String sql3 ="SELECT discount FROM room WHERE type='"+type+"'";
                            resultSet = statement.executeQuery(sql3);
                            while(resultSet.next())
                            {
                                discount = resultSet.getInt("discount");
                            }
                            amount = amount - amount*(discount/100);
                            
                            String sql = "UPDATE payment SET amount="+amount+",discount="+discount+",type ='Room Booking',GuestID="+GID+" "
                                        + "WHERE id="+PID;
                            PreparedStatement pst = connection.prepareStatement(sql);                        
                            pst.executeUpdate();
                            
                            
                         /*   String sql6 = "UPDATE room SET Booked = 0, GuestID = null , BookingID = null "
                                        + "WHERE BookingID="+BID+" "
                                        + "AND type = 'Single'";
                        
                            PreparedStatement pst4 = connection.prepareStatement(sql6);
                            pst4.executeUpdate();*/
                            
                             /*                           
                            String sql4 = "DELETE FROM bookings "
                                        + "WHERE id="+BID;
                            PreparedStatement pst2 = connection.prepareStatement(sql4);                        
                            pst2.executeUpdate();*/
                            
                            
                            String sql5 = "DELETE FROM messages "
                                        + "WHERE Message LIKE '%"+rooms+"%'";
                            PreparedStatement pst3 = connection.prepareStatement(sql5);                        
                            pst3.executeUpdate();
		}
        
		catch(Exception e)
		{
			System.out.println(e.getMessage());
		}
        
        Form_Alerts A =new Form_Alerts("Guest was Checked out Sucessfully.");
        A.setVisible(true);
        A.setDefaultCloseOperation(0);
        A.setVisible(true);
        A.setLocationRelativeTo(this);
        this.dispose();
        
        
    }//GEN-LAST:event_PayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Form_CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Form_CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Form_CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Form_CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Form_CheckOut().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Extra;
    private javax.swing.JButton Pay;
    private javax.swing.JTextField Total;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
